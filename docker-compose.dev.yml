version: '3.8'

services:
  # Redis for development
  redis:
    image: redis:7-alpine
    container_name: legal-analyzer-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - legal-analyzer-dev-network

  # Backend development service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: legal-analyzer-backend-dev
    ports:
      - "8000:8000"
    environment:
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY:-test-key}
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - REDIS_URL=redis://redis:6379/0
      - APP_ENV=development
      - LOG_LEVEL=DEBUG
      - MAX_CONCURRENT_ANALYSES=2
      - CACHE_RETENTION_HOURS=1
    volumes:
      - ./backend:/app
      - backend_dev_logs:/app/logs
      - backend_dev_exports:/app/exports
      - backend_dev_temp:/app/temp_uploads
    depends_on:
      redis:
        condition: service_healthy
    command: python -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - legal-analyzer-dev-network
    restart: unless-stopped

  # Frontend development service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: legal-analyzer-frontend-dev
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0 --port 5173
    networks:
      - legal-analyzer-dev-network
    restart: unless-stopped

volumes:
  redis_dev_data:
    driver: local
  backend_dev_logs:
    driver: local
  backend_dev_exports:
    driver: local
  backend_dev_temp:
    driver: local

networks:
  legal-analyzer-dev-network:
    driver: bridge
